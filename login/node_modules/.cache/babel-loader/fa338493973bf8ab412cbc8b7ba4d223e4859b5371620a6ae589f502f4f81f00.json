{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\login\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [adminEmails, setAdminEmails] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch admin emails from the server\n  useEffect(() => {\n    const fetchAdminEmails = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/admins');\n        setAdminEmails(response.data); // Set the retrieved emails to state\n      } catch (error) {\n        console.error('Error fetching admin emails:', error);\n        setError('Failed to fetch admin emails');\n      }\n    };\n    fetchAdminEmails(); // Call the function to fetch emails on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"welcome-text\",\n        children: \"Admin Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: adminEmails.map((admin, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: admin.emailId\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this) // Display each admin email\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"biy65YkI7K0fsDtxTE07U3KzAYs=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LoginPage","_s","adminEmails","setAdminEmails","error","setError","fetchAdminEmails","response","get","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","admin","index","emailId","_c","$RefreshReg$"],"sources":["E:/Project/login/src/components/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginPage = () => {\r\n  const [adminEmails, setAdminEmails] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch admin emails from the server\r\n  useEffect(() => {\r\n    const fetchAdminEmails = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/admins');\r\n        setAdminEmails(response.data); // Set the retrieved emails to state\r\n      } catch (error) {\r\n        console.error('Error fetching admin emails:', error);\r\n        setError('Failed to fetch admin emails');\r\n      }\r\n    };\r\n\r\n    fetchAdminEmails(); // Call the function to fetch emails on component mount\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2 className=\"welcome-text\">Admin Emails</h2>\r\n        {error && <p>{error}</p>}\r\n        <ul>\r\n          {adminEmails.map((admin, index) => (\r\n            <li key={index}>{admin.emailId}</li> // Display each admin email\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,kCAAkC,CAAC;QACpEL,cAAc,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC;IAEDC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBb,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bb,OAAA;QAAIY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7CZ,KAAK,iBAAIL,OAAA;QAAAa,QAAA,EAAIR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBjB,OAAA;QAAAa,QAAA,EACGV,WAAW,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BpB,OAAA;UAAAa,QAAA,EAAiBM,KAAK,CAACE;QAAO,GAArBD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAAC,CAAC;QACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}