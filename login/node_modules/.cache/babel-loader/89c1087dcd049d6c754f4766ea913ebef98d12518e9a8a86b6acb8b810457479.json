{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\login\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport './LoginPage.css';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [adminEmails, setAdminEmails] = useState([]);\n\n  // Fetch admin email IDs\n  const fetchAdminEmails = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/admins');\n      setAdminEmails(response.data.emails);\n      console.log('Fetched Admin Emails:', response.data.emails);\n    } catch (err) {\n      console.error('Error fetching admin emails:', err);\n      setError('Failed to fetch admin emails');\n    }\n  };\n  useEffect(() => {\n    fetchAdminEmails(); // Call to fetch admin emails on component mount\n  }, []);\n  const googleLogin = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      console.log(tokenResponse);\n      try {\n        const res = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        const userInfo = res.data;\n        console.log(\"User Info:\", userInfo);\n        const emailArray = [userInfo.email];\n        const roleResponse = await axios.post('http://localhost:5000/api/checkRoles', {\n          emails: emailArray\n        });\n        const roleData = roleResponse.data.roles;\n        if (roleData[userInfo.email] === 'admin') {\n          window.location.href = 'http://localhost:3000/admin/dashboard';\n        } else {\n          window.location.href = 'http://localhost:3000/faculty/dashboard';\n        }\n      } catch (err) {\n        console.error('Failed to fetch user info', err);\n        setError('Failed to fetch user details');\n      }\n    },\n    onError: () => {\n      console.log('Login Failed');\n      setError('Login Failed');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"welcome-text\",\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"google-sign-in\",\n        onClick: googleLogin,\n        children: \"Sign In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sign-in-text\",\n        children: \"Sign in with your BIT account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Email IDs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: adminEmails.map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: email\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"PYR/jtEcTjskuS6qNjq8TxwT8x4=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useGoogleLogin","axios","logo","jsxDEV","_jsxDEV","LoginPage","_s","error","setError","adminEmails","setAdminEmails","fetchAdminEmails","response","get","data","emails","console","log","err","googleLogin","onSuccess","tokenResponse","res","headers","Authorization","access_token","userInfo","emailArray","email","roleResponse","post","roleData","roles","window","location","href","onError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","map","index","_c","$RefreshReg$"],"sources":["E:/Project/login/src/components/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport './LoginPage.css';\r\nimport logo from './assets/logo.png';\r\n\r\nconst LoginPage = () => {\r\n  const [error, setError] = useState(null);\r\n  const [adminEmails, setAdminEmails] = useState([]);\r\n\r\n  // Fetch admin email IDs\r\n  const fetchAdminEmails = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/admins');\r\n      setAdminEmails(response.data.emails);\r\n      console.log('Fetched Admin Emails:', response.data.emails);\r\n    } catch (err) {\r\n      console.error('Error fetching admin emails:', err);\r\n      setError('Failed to fetch admin emails');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAdminEmails(); // Call to fetch admin emails on component mount\r\n  }, []);\r\n\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: async tokenResponse => {\r\n      console.log(tokenResponse);\r\n      try {\r\n        const res = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\r\n          headers: {\r\n            Authorization: `Bearer ${tokenResponse.access_token}`,\r\n          },\r\n        });\r\n\r\n        const userInfo = res.data;\r\n        console.log(\"User Info:\", userInfo);\r\n\r\n        const emailArray = [userInfo.email];\r\n\r\n        const roleResponse = await axios.post('http://localhost:5000/api/checkRoles', {\r\n          emails: emailArray,\r\n        });\r\n\r\n        const roleData = roleResponse.data.roles;\r\n\r\n        if (roleData[userInfo.email] === 'admin') {\r\n          window.location.href = 'http://localhost:3000/admin/dashboard';\r\n        } else {\r\n          window.location.href = 'http://localhost:3000/faculty/dashboard';\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch user info', err);\r\n        setError('Failed to fetch user details');\r\n      }\r\n    },\r\n    onError: () => {\r\n      console.log('Login Failed');\r\n      setError('Login Failed');\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2 className=\"welcome-text\">Welcome Back!</h2>\r\n        <img\r\n          src={logo}\r\n          alt=\"Logo\"\r\n          className=\"login-logo\"\r\n        />\r\n        <hr className=\"divider\" />\r\n        {error && <p>{error}</p>}\r\n        <button className=\"google-sign-in\" onClick={googleLogin}>Sign In with Google</button>\r\n        <p className=\"sign-in-text\">Sign in with your BIT account</p>\r\n        <div>\r\n          <h3>Admin Email IDs:</h3>\r\n          <ul>\r\n            {adminEmails.map((email, index) => (\r\n              <li key={index}>{email}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kCAAkC,CAAC;MACpEH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IAC5D,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZF,OAAO,CAACT,KAAK,CAAC,8BAA8B,EAAEW,GAAG,CAAC;MAClDV,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,WAAW,GAAGnB,cAAc,CAAC;IACjCoB,SAAS,EAAE,MAAMC,aAAa,IAAI;MAChCL,OAAO,CAACC,GAAG,CAACI,aAAa,CAAC;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACY,GAAG,CAAC,+CAA+C,EAAE;UAC3EU,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUH,aAAa,CAACI,YAAY;UACrD;QACF,CAAC,CAAC;QAEF,MAAMC,QAAQ,GAAGJ,GAAG,CAACR,IAAI;QACzBE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAES,QAAQ,CAAC;QAEnC,MAAMC,UAAU,GAAG,CAACD,QAAQ,CAACE,KAAK,CAAC;QAEnC,MAAMC,YAAY,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,sCAAsC,EAAE;UAC5Ef,MAAM,EAAEY;QACV,CAAC,CAAC;QAEF,MAAMI,QAAQ,GAAGF,YAAY,CAACf,IAAI,CAACkB,KAAK;QAExC,IAAID,QAAQ,CAACL,QAAQ,CAACE,KAAK,CAAC,KAAK,OAAO,EAAE;UACxCK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,uCAAuC;QAChE,CAAC,MAAM;UACLF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,yCAAyC;QAClE;MACF,CAAC,CAAC,OAAOjB,GAAG,EAAE;QACZF,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEW,GAAG,CAAC;QAC/CV,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC;IACD4B,OAAO,EAAEA,CAAA,KAAM;MACbpB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BT,QAAQ,CAAC,cAAc,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAKiC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBlC,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BlC,OAAA;QAAIiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CtC,OAAA;QACEuC,GAAG,EAAEzC,IAAK;QACV0C,GAAG,EAAC,MAAM;QACVP,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFtC,OAAA;QAAIiC,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACzBnC,KAAK,iBAAIH,OAAA;QAAAkC,QAAA,EAAI/B;MAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtC,OAAA;QAAQiC,SAAS,EAAC,gBAAgB;QAACQ,OAAO,EAAE1B,WAAY;QAAAmB,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFtC,OAAA;QAAGiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7DtC,OAAA;QAAAkC,QAAA,gBACElC,OAAA;UAAAkC,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBtC,OAAA;UAAAkC,QAAA,EACG7B,WAAW,CAACqC,GAAG,CAAC,CAAClB,KAAK,EAAEmB,KAAK,kBAC5B3C,OAAA;YAAAkC,QAAA,EAAiBV;UAAK,GAAbmB,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAjFID,SAAS;EAAA,QAoBOL,cAAc;AAAA;AAAAgD,EAAA,GApB9B3C,SAAS;AAmFf,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}